.row
  .col-sm-6
    .panel.panel-default
      .panel-heading: h3.panel-title Bucket information
      .panel-body

        p Bucket: #{@aws.bucket}

        table.table
          thead
            tr
              th Date
              th Store used
          - @datapoints.each do |dp|
            tr
              td = dp.timestamp.to_date.to_s
              td
                span title="#{dp.sum / 1.megabytes} MB" = number_to_human_size dp.sum
    .panel.panel-default
      .panel-heading: h3.panel-title Rekognition
      .panel-body
        dl
          dt Name
          dd = Rails.application.secrets.rekognition_collection
          dt Number of faces
          dd = @aws.rekognition_collection_size

    .panel.panel-default
      .panel-heading: h3.panel-title Budgets
      .panel-body
        - @aws.budgets.each do |budget|
          .text-center
            strong
              = budget.budget_name
              br
              small = budget.cost_filters.transform_values{|i| i.to_sentence }.to_a.map{|i| i.join(": ") }.join("\n")

          - if budget.budget_limit.is_a?(Aws::Budgets::Types::Spend)
            table.table
              tr
                td Filter
                td.text-right

              tr
                td Limit
                td.text-right
                  = number_to_currency budget.budget_limit.amount.to_f, locale: 'en'
              tr
                td Time period
                td.text-right
                  |#{l(budget.time_period.start.to_date)} - #{l(budget.time_period.end.to_date)}
              tr
                td Current spent in Timeframe
                td.text-right
                  = number_to_currency budget.calculated_spend.actual_spend.amount.to_f, locale: 'en'
              tr
                td Forecast
                td.text-right
                  = number_to_currency budget.calculated_spend.forecasted_spend.amount.to_f, locale: 'en'




  .col-sm-6
    h1 Local storage

    p Available: #{@aws.disk_usage[:available].round(1)}GB / #{@aws.disk_usage[:total].round(1)}GB

    strong Upload dir stats:

    table.table
      - @aws.disk_usage[:upload_dir].each do |mb,dir|
        tr
          td = dir
          td = mb

