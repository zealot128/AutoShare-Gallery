version: '3.4'
services:
  db:
    image: "postgres:12-alpine"
    env_file: .env
    volumes:
      - db-data:/var/lib/postgresql/data

  app: &app_base
    build:
      context: .
      args:
        - ADDITIONAL_PACKAGES=nodejs yarn python2 build-base git
        - RAILS_ENV=production
    environment:
      - RAILS_ENV=production
      - RAILS_MAX_THREADS
      - REKOGNITION_COLLECTION
    env_file: .env
    ports:
      - "3000"
    links:
      - db
    volumes:
      - node-modules-cache:/app/node_modules
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`pics2.stefanwienert.de`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=letsencrypt"

  # worker:
  #   <<: *app_base
  #   command: bundle exec good_job start
  #   ports: []
  #   depends_on:
  #     - app
  #   labels: []

  traefik:
    image: "traefik:v2.0.0-rc3"
    container_name: "traefik"
    env_file: .env
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.letsencrypt.acme.email=info@stefanwienert.de"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "127.0.0.1:8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
  # s3:
  #   image: minio/minio
  #   environment:
  #     - MINIO_ACCESS_KEY
  #     - MINIO_SECRET_KEY
  #   expose:
  #     - "9000"
  #   command: server /data
  #   volumes:
  #     - s3-data:/data
  #   env_file: .env
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
  #     interval: 30s
  #     timeout: 20s
  #     retries: 3
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.whoami.rule=Host(`storage.stefanwienert.de`)"
  #     - "traefik.http.routers.whoami.entrypoints=web"

volumes:
  # s3-data:
  db-data:
  node-modules-cache:
  letsencrypt:
